       IDENTIFICATION DIVISION.
       PROGRAM-ID. PBCTSRES.
      *****************************************************************
      * OVERVIEW                                                      *
      * --------                                                      *
      * TEST GENERATED PROGRAMS FOR: simple.proto                     *
      *****************************************************************

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA DIVISION.
      *****************************************************************
      *        W O R K I N G    S T O R A G E    S E C T I O N        *
      *****************************************************************
       WORKING-STORAGE SECTION.
       01  PROTOBUF-BYTES                    PIC X(4096).
       01  PROTOBUF-BYTES-LEN                PIC 9(8) COMP-5.
       01  W-BYTES-USED                      PIC 9(8) COMP-5.
       01  PROTOBUF-BYTES-HEX-STRING         PIC X(8192).

       01  W-L                               PIC 9(4) COMP-5.

      *    // The COBOL structure
       01  SearchResponse.
           03  OCCURS-COUNTERS--C.
             05  Result--C PIC 9(9) COMP-5.
           03  Result OCCURS 0 TO 10 DEPENDING ON Result--C.
             05  url PIC X(32) DISPLAY.
             05  R-title PIC X(32) DISPLAY.
             05  snippets OCCURS 5 PIC X(32) DISPLAY.

       01  W-I                                PIC 9(4) COMP VALUE 0.
       01  W-J                                PIC 9(4) COMP VALUE 0.
       01  W-RETURN-CODE                      PIC 9(4) COMP VALUE 0.
      *****************************************************************
      *    P R O C E D U R E  D I V I S I O N   S E C T I O N         *
      *****************************************************************
       PROCEDURE DIVISION.

      * ---------------------------------------------------------------
      * TEST TO SearchResponse 
      * ---------------------------------------------------------------
           DISPLAY "TO-Collection ======= 0 =============="
           PERFORM TEST-SEARRESP THRU END-TEST-SEARRESP.
           PERFORM TEST-SEARRESW THRU END-TEST-SEARRESW.
           
           GOBACK.

       TEST-SEARRESP.
           DISPLAY 'TEST-SEARRESP'.
           
           MOVE X'0a440a0b687474703a2f2f75726c311207726573756c74311a0d46
      -          '6972737420736e69707065741a0e5365636f6e6420736e69707065
      -          '741a0d546869726420736e69707065740a350a0b687474703a2f2f
      -          '75726c321207726573756c74321a0e466f7572746820736e697070
      -          '65741a0d466966746820736e6970706574'
             TO PROTOBUF-BYTES.
           MOVE 125 TO PROTOBUF-BYTES-LEN.
           CALL 'SEARRESP' USING PROTOBUF-BYTES
                                 PROTOBUF-BYTES-LEN
                                 SearchResponse.
           PERFORM VARYING W-I FROM 1 BY 1 UNTIL W-I > Result--C
               DISPLAY 'url(' W-I ')=' url(W-I)
               DISPLAY 'R-title(' W-I ')=' R-title(W-I)
               PERFORM VARYING W-J FROM 1 BY 1 UNTIL W-J > 5
                   DISPLAY 'snippets(' W-I ', ' W-J ')='
                            snippets(W-I, W-J)
               END-PERFORM
           END-PERFORM.
           
       END-TEST-SEARRESP. EXIT.

       TEST-SEARRESW.
           DISPLAY 'TEST-SEARRESW'.
          
           MOVE LOW-VALUES TO PROTOBUF-BYTES.
           MOVE ZERO TO PROTOBUF-BYTES-LEN.
           CALL 'SEARRESW' USING SearchResponse
                                 PROTOBUF-BYTES
                                 PROTOBUF-BYTES-LEN.

           COMPUTE W-L = PROTOBUF-BYTES-LEN.
           CALL 'PBBA2HEX' USING W-L
                           PROTOBUF-BYTES
                           PROTOBUF-BYTES-HEX-STRING
           
           DISPLAY 'PROTOBUF-BYTES-LEN=' PROTOBUF-BYTES-LEN.
           DISPLAY 'PROTOBUF-BYTES=' PROTOBUF-BYTES-HEX-STRING.

       END-TEST-SEARRESW. EXIT.

       END PROGRAM PBCTSRES.

